- file_page = !values[:classmod]
- title_in_description = values[:entry].description && values[:entry].description =~ /^\s*<h1>/m

.header
  - title = capture_haml do
    - if file_page
      = values[:file].name
    - else
      %span.type= values[:classmod]
      = values[:entry].full_name
  - if title_in_description
    .name= title
  - else
    %h1.name= title
    
  - if file_page
    .paths
      = values[:file].relative_name
  - else
    %ol.paths
      - values[:entry].in_files.each_with_index do |file, index|
        %li{ :class => index > 0 ? 'other' : nil }
          -# FIXME cleanup
          = link_to file.full_name, Pathname.new(file.path).relative_path_from(Pathname.new(values[:entry].path).dirname)
      - if values[:entry].in_files.size > 1
        %li
          %a.show{ :href => '#', :onclick => 'this.parentNode.parentNode.className += " expanded"; this.parentNode.removeChild(this); return false' } show all
          
  - if values[:entry].parent 
    .parent
      Parent:
      -# FIXME helper method
      %strong= link_to values[:entry].parent.name, Pathname.new(class_dir) + Pathname.new(values[:entry].parent.path).relative_path_from(Pathname.new values[:entry].path)

  - if values[:entry].respond_to?(:last_modified) and values[:entry].last_modified
    .last-update
      Last Update:
      %span.datetime= values[:entry].last_modified
    
#content
  #text
    - if values[:description]
      #description~ sanitize_code_blocks frame_link values[:description]

    = frame_link yield
